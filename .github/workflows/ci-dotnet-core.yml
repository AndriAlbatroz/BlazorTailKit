name: CI BlazorWindKit.Core

# Per vedere i messaggi ::debug::, imposta questi secret:
# ACTIONS_STEP_DEBUG=true
# ACTIONS_RUNNER_DEBUG=true

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: '1'

jobs:
  test:
    name: üß™ Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: |
          echo "::group::üîß Dotnet Restore"
          dotnet restore BlazorWindKit.Core --verbosity minimal
          echo "::endgroup::"

      - name: Build BlazorWindKit.Core
        run: |
          echo "::group::üî® Dotnet Build"
          dotnet build BlazorWindKit.Core --configuration Release --no-restore --verbosity minimal
          echo "::endgroup::"

      - name: Build BlazorWindKit.Core.Tests
        run: |
          echo "::group::üî® Dotnet Build"
          dotnet build BlazorWindKit.Core.Tests --configuration Release --no-restore --verbosity minimal
          echo "::endgroup::"

      - name: Run unit tests
        run: |
          echo "::group::üß™ Dotnet Test"
          dotnet test --configuration Release --no-build --no-restore --verbosity normal
          echo "::endgroup::"

  pack-and-publish:
    name: üì¶ Pack & Publish
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')   # ‚Üê esegue solo sui tag v*

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: "Debug: print refs"
        run: |
          echo "::debug::EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "::debug::GITHUB_REF: $GITHUB_REF"
          echo "::debug::GITHUB_REF_NAME: $GITHUB_REF_NAME"

      - name: Restore dependencies
        run: |
          echo "::group::üîß Dotnet Restore"
          dotnet restore --verbosity minimal
          echo "::endgroup::"

      - name: Build solution
        run: |
          echo "::group::üî® Dotnet Build"
          dotnet build --configuration Release --no-restore --verbosity minimal
          echo "::endgroup::"

      - name: Pack NuGet package
        run: |
          echo "::group::üì¶ Dotnet Pack"
          echo "::debug::Starting pack step"
          dotnet pack BlazorWindKit.Core/BlazorWindKit.Core.csproj \
            --configuration Release \
            --no-build \
            --output ./artifacts \
            --verbosity diag
          echo "::debug::Pack complete, artifacts in ./artifacts"
          echo "::endgroup::"

      - name: Configure GitHub Packages source
        run: |
          echo "::debug::Configuring GitHub Packages source"
          dotnet nuget add source \
            --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text \
            --name github \
            "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Publish to GitHub Packages
        run: |
          echo "::debug::Publishing package to GitHub Packages"
          dotnet nuget push ./artifacts/*.nupkg \
            --source github \
            --api-key ${{ secrets.GITHUB_TOKEN }}
